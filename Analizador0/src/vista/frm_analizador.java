/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;
import java.io.File;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import java.nio.file.Files;
import javax.swing.JFrame;



/**
 *
 * @author alexhiginio05
 */
public class frm_analizador extends javax.swing.JFrame {
    
    
    private File archivoActual = null;private String traducirMurcielago(String texto) {
    texto = texto.toLowerCase(); // Convertir todo a minÃºsculas
    StringBuilder traducido = new StringBuilder();

    for (char c : texto.toCharArray()) {
        switch (c) {
            case 'm' -> traducido.append('0');
            case 'u' -> traducido.append('1');
            case 'r' -> traducido.append('2');
            case 'c' -> traducido.append('3');
            case 'i' -> traducido.append('4');
            case 'e' -> traducido.append('5');
            case 'l' -> traducido.append('6');
            case 'a' -> traducido.append('7');
            case 'g' -> traducido.append('8');
            case 'o' -> traducido.append('9');
            default -> traducido.append(c);
        }
    }

    return traducido.toString();
}

    
// Guarda el archivo abierto, si existe


    /**
     * Creates new form frm_analizador
     */
    public frm_analizador() {
        initComponents();
        setExtendedState(JFrame.MAXIMIZED_BOTH); // Inicia maximizada
        setLocationRelativeTo(null);             // Centrada en pantalla
        setResizable(true);                      // Se puede maximizar y minimizar
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_texto = new javax.swing.JTextArea();
        btn_procesar = new javax.swing.JButton();
        lbl_resul = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt_resul = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        txt_titulo = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        menu_archivo = new javax.swing.JMenu();
        item_abrir = new javax.swing.JMenuItem();
        item_guardar = new javax.swing.JMenuItem();
        item_gcomo = new javax.swing.JMenuItem();
        menu_editar = new javax.swing.JMenu();
        item_copiar = new javax.swing.JMenuItem();
        item_pegar = new javax.swing.JMenuItem();
        item_cortar = new javax.swing.JMenuItem();
        item_buscar = new javax.swing.JMenuItem();
        item_reemplazar = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        jMenu1.setText("File");
        jMenuBar2.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar2.add(jMenu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txt_texto.setColumns(20);
        txt_texto.setRows(5);
        txt_texto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txt_texto.setMinimumSize(new java.awt.Dimension(50, 50));
        txt_texto.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                txt_textoAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(txt_texto);

        btn_procesar.setBackground(new java.awt.Color(102, 204, 255));
        btn_procesar.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btn_procesar.setForeground(new java.awt.Color(255, 255, 255));
        btn_procesar.setText("PROCESAR");
        btn_procesar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        btn_procesar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_procesarActionPerformed(evt);
            }
        });

        lbl_resul.setText("-");
        lbl_resul.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                lbl_resulAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        txt_resul.setColumns(20);
        txt_resul.setRows(5);
        txt_resul.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txt_resul.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                txt_resulAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane2.setViewportView(txt_resul);

        jLabel1.setBackground(new java.awt.Color(0, 204, 204));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel1.setText("TRADUCCION  A CLAVE MURCIELAGO");

        txt_titulo.setText("IINGRESA UN TEXTO U ABRIR UN ARCHIVO");
        txt_titulo.setAlignmentX(0.5F);

        menu_archivo.setText("ARCHIVO");

        item_abrir.setText("Abrir");
        item_abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                item_abrirActionPerformed(evt);
            }
        });
        menu_archivo.add(item_abrir);

        item_guardar.setText("Guardar");
        item_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                item_guardarActionPerformed(evt);
            }
        });
        menu_archivo.add(item_guardar);

        item_gcomo.setText("Guardar Como");
        item_gcomo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                item_gcomoActionPerformed(evt);
            }
        });
        menu_archivo.add(item_gcomo);

        jMenuBar1.add(menu_archivo);

        menu_editar.setText("EDITAR ");

        item_copiar.setText("Copiar");
        item_copiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                item_copiarActionPerformed(evt);
            }
        });
        menu_editar.add(item_copiar);

        item_pegar.setText("Pegar");
        item_pegar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                item_pegarActionPerformed(evt);
            }
        });
        menu_editar.add(item_pegar);

        item_cortar.setText("Cortar");
        item_cortar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                item_cortarActionPerformed(evt);
            }
        });
        menu_editar.add(item_cortar);

        item_buscar.setText("Bucar");
        item_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                item_buscarActionPerformed(evt);
            }
        });
        menu_editar.add(item_buscar);

        item_reemplazar.setText("Reemplazar");
        item_reemplazar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                item_reemplazarActionPerformed(evt);
            }
        });
        menu_editar.add(item_reemplazar);

        jMenuBar1.add(menu_editar);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(196, 196, 196)
                .addComponent(btn_procesar, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(207, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_resul, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(txt_titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txt_titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_procesar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_resul, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_procesarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_procesarActionPerformed
        // TODO add your handling code here:
       String texto = txt_texto.getText().trim();
      

if (texto.isEmpty()) {
    JOptionPane.showMessageDialog(this, "Por favor ingrese un texto.");
    return;
}

    if (texto.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Por favor ingrese un texto.");
        return;
    }

    // --- ESTADÃSTICAS ---
    String[] palabras = texto.split("\\s+");
    int numPalabras = palabras.length;
    int numCaracteres = texto.replace(" ", "").length();
    int numLineas = texto.split("\n").length;

    String palabraMasLarga = "";
    for (String palabra : palabras) {
        if (palabra.length() > palabraMasLarga.length()) {
            palabraMasLarga = palabra;
        }
    }

    int longitudTexto = texto.length();
    char primeraLetra = texto.charAt(0);
    char ultimaLetra = texto.charAt(longitudTexto - 1);
    char letraCentral = texto.charAt(longitudTexto / 2);

    String primeraPalabra = palabras[0];
    String palabraCentral = palabras[palabras.length / 2];
    String ultimaPalabra = palabras[palabras.length - 1];

    String textoMinusculas = texto.toLowerCase();
    int repA = contarLetras(textoMinusculas, 'a');
    int repE = contarLetras(textoMinusculas, 'e');
    int repT = contarLetras(textoMinusculas, 't');
    int repO = contarLetras(textoMinusculas, 'o');
    int repU = contarLetras(textoMinusculas, 'u');

    String estadisticas = String.format("""
        Longitud del texto.......: %d
        Total de palabras........: %d
        Primera letra del texto..: %c
        Ãltima letra del texto...: %c
        Letra central del texto..: %c
        Primera palabra...........: %s
        Palabra central...........: %s
        Ãltima palabra............: %s

        Repeticiones de 'A'.......: %d
        Repeticiones de 'E'.......: %d
        Repeticiones de 'T'.......: %d
        Repeticiones de 'O'.......: %d
        Repeticiones de 'U'.......: %d
        """,
        longitudTexto, numPalabras, primeraLetra, ultimaLetra, letraCentral,
        primeraPalabra, palabraCentral, ultimaPalabra,
        repA, repE, repT, repO, repU);

   lbl_resul.setText("<html>" + estadisticas.replace("\n", "<br>") + "</html>");


    // --- TRADUCCIÃN MURCIÃLAGO ---
    String traduccion = traducirMurcielago(texto);

    String resultadoFinal = "Texto ingresado:\n"
                          + texto + "\n\n"
                          + "TraducciÃ³n a clave murciÃ©lago:\n"
                          + traduccion;

    txt_resul.setText(resultadoFinal);
                                                         
        
    }//GEN-LAST:event_btn_procesarActionPerformed

    private void item_copiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_item_copiarActionPerformed
        // TODO add your handling code here:
         txt_texto.copy();
    }//GEN-LAST:event_item_copiarActionPerformed

    private void item_pegarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_item_pegarActionPerformed
        // TODO add your handling code here:
         txt_texto.copy();
    }//GEN-LAST:event_item_pegarActionPerformed

    private void item_cortarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_item_cortarActionPerformed
        // TODO add your handling code here:
         txt_texto.copy();
    }//GEN-LAST:event_item_cortarActionPerformed

    private void item_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_item_buscarActionPerformed
        // TODO add your handling code here:
        String palabra = JOptionPane.showInputDialog(this, "Ingrese palabra a buscar:");
    if (palabra != null && !palabra.isEmpty()) {
        String texto = txt_texto.getText();
        int index = texto.indexOf(palabra);
        if (index >= 0) {
            txt_texto.setCaretPosition(index);
            txt_texto.select(index, index + palabra.length());
            txt_texto.grabFocus();
        } else {
            JOptionPane.showMessageDialog(this, "Palabra no encontrada.");
        }
    }
    }//GEN-LAST:event_item_buscarActionPerformed

    private void item_reemplazarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_item_reemplazarActionPerformed
        // TODO add your handling code here:
            String palabraBuscar = JOptionPane.showInputDialog(this, "Palabra a reemplazar:");
    String palabraNueva = JOptionPane.showInputDialog(this, "Nueva palabra:");

    if (palabraBuscar != null && palabraNueva != null) {
        String texto = txt_texto.getText();
        if (texto.contains(palabraBuscar)) {
            texto = texto.replace(palabraBuscar, palabraNueva);
            txt_texto.setText(texto);
            JOptionPane.showMessageDialog(this, "Reemplazo completado.");
        } else {
                JOptionPane.showMessageDialog(this, "Palabra no encontrada.");
        }
    }
    
    }//GEN-LAST:event_item_reemplazarActionPerformed

    private void item_gcomoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_item_gcomoActionPerformed
        // TODO add your handling code here:
       
    JFileChooser fileChooser = new JFileChooser();
    int seleccion = fileChooser.showSaveDialog(this);

    if (seleccion == JFileChooser.APPROVE_OPTION) {
        archivoActual = fileChooser.getSelectedFile();
        try {
            String contenido = txt_texto.getText();
            Files.write(archivoActual.toPath(), contenido.getBytes());
            JOptionPane.showMessageDialog(this, "Archivo guardado como: " + archivoActual.getName());
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error al guardar el archivo: " + e.getMessage());
        }
    }


        
    }//GEN-LAST:event_item_gcomoActionPerformed

    private void item_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_item_guardarActionPerformed
        // TODO add your handling code here:
            if (archivoActual != null) {
        try {
            String contenido = txt_texto.getText();
            Files.write(archivoActual.toPath(), contenido.getBytes());
            JOptionPane.showMessageDialog(this, "Archivo guardado correctamente.");
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error al guardar el archivo: " + e.getMessage());
        }
    } else {
        item_guardarActionPerformed(evt); // Si no hay archivo, invoca Guardar como
    }

    }//GEN-LAST:event_item_guardarActionPerformed

    private void item_abrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_item_abrirActionPerformed
        // TODO add your handling code here:
            JFileChooser fileChooser = new JFileChooser();
    int seleccion = fileChooser.showOpenDialog(this);

    if (seleccion == JFileChooser.APPROVE_OPTION) {
        archivoActual = fileChooser.getSelectedFile();
        try {
            String texto = new String(Files.readAllBytes(archivoActual.toPath()));
            txt_texto.setText(texto);
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error al leer el archivo: " + e.getMessage());
        }
    }
    }//GEN-LAST:event_item_abrirActionPerformed

    private void txt_resulAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_txt_resulAncestorAdded
        // TODO add your handling code here:
 String texto = txt_texto.getText().toLowerCase();  // Obtener texto de entrada y convertir a minÃºsculas
    StringBuilder resultado = new StringBuilder();

    for (char c : texto.toCharArray()) {
        switch (c) {
            case 'm': resultado.append('0'); break;
            case 'u': resultado.append('1'); break;
            case 'r': resultado.append('2'); break;
            case 'c': resultado.append('3'); break;
            case 'i': resultado.append('4'); break;
            case 'e': resultado.append('5'); break;
            case 'l': resultado.append('6'); break;
            case 'a': resultado.append('7'); break;
            case 'g': resultado.append('8'); break;
            case 'o': resultado.append('9'); break;
            default: resultado.append(c); break;
        }
    }

    // Mostrar el resultado en el Ã¡rea de texto de salida
    }//GEN-LAST:event_txt_resulAncestorAdded

    private void txt_textoAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_txt_textoAncestorAdded
        // TODO add your handling code here:
                setExtendedState(JFrame.MAXIMIZED_BOTH); // Inicia maximizada
        setLocationRelativeTo(null);             // Centrada en pantalla
        setResizable(true);  
        setSize(600,400);
        
    }//GEN-LAST:event_txt_textoAncestorAdded

    private void lbl_resulAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_lbl_resulAncestorAdded
        // TODO add your handling code here:
    }
// MÃ©todo para contar letras
private int contarLetras(String texto, char letra) {
    int contador = 0;
    for (int i = 0; i < texto.length(); i++) {
        if (texto.charAt(i) == letra) {
            contador++;
        }
    }
    return contador;


        
        
    }//GEN-LAST:event_lbl_resulAncestorAdded

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frm_analizador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frm_analizador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frm_analizador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm_analizador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new frm_analizador().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_procesar;
    private javax.swing.JMenuItem item_abrir;
    private javax.swing.JMenuItem item_buscar;
    private javax.swing.JMenuItem item_copiar;
    private javax.swing.JMenuItem item_cortar;
    private javax.swing.JMenuItem item_gcomo;
    private javax.swing.JMenuItem item_guardar;
    private javax.swing.JMenuItem item_pegar;
    private javax.swing.JMenuItem item_reemplazar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbl_resul;
    private javax.swing.JMenu menu_archivo;
    private javax.swing.JMenu menu_editar;
    private javax.swing.JTextArea txt_resul;
    private javax.swing.JTextArea txt_texto;
    private javax.swing.JLabel txt_titulo;
    // End of variables declaration//GEN-END:variables
}
